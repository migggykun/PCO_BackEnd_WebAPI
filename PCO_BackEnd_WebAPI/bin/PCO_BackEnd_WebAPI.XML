<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PCO_BackEnd_WebAPI</name>
    </assembly>
    <members>
        <member name="M:PCO_BackEnd_WebAPI.App_Start.AuthToken.AddAuthorizationHeaderParameterOperationFilter.Apply(Swashbuckle.Swagger.Operation,Swashbuckle.Swagger.SchemaRegistry,System.Web.Http.Description.ApiDescription)">
            <summary>
            Applies the operation filter.
            </summary>
            <param name="operation"></param>
            <param name="schemaRegistry"></param>
            <param name="apiDescription"></param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,PCO_BackEnd_WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,PCO_BackEnd_WebAPI.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},PCO_BackEnd_WebAPI.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:PCO_BackEnd_WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(PCO_BackEnd_WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,PCO_BackEnd_WebAPI.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:PCO_BackEnd_WebAPI.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:PCO_BackEnd_WebAPI.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:PCO_BackEnd_WebAPI.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AddressController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets list of user information
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AddressController.Get(System.Int32)">
            <summary>
            Gets the user information based on specified id
            </summary>
            <param name="id">id of the user information to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AddressController.UpdateAddress(System.Int32,PCO_BackEnd_WebAPI.DTOs.Accounts.RequestAddressDTO)">
            <summary>
            Updates user info based on specified id
            </summary>
            <param name="id">user id</param>
            <param name="addressDTO">New information about the user to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Bank.BankDetailController.GetAll">
            <summary>
            Returns all bank details
            </summary>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Bank.BankDetailController.Get(System.Int32)">
            <summary>
            Gets bank detail based on specified id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Bank.BankDetailController.AddConference(PCO_BackEnd_WebAPI.DTOs.Bank.RequestBankDetailDTO)">
            <summary>
            Adds a Bank Detail
            </summary>
            <param name="bankDetailDTO">Bank details to be added.</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Bank.BankDetailController.UpdateBankDetail(System.Int32,PCO_BackEnd_WebAPI.DTOs.Bank.RequestBankDetailDTO)">
            <summary>
            Updates BankDetails
            </summary>
            <param name="id">id of the bank detail to be updated</param>
            <param name="conferenceDTO">New information about the bank to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Bank.BankDetailController.DeleteBankDetails(System.Int32)">
            <summary>
            Deletes a bank details based on specified id
            </summary>
            <param name="id">id of the bank details to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Registrations.PaymentController.GetAll(System.Int32,System.Int32,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets list of Registration
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Registrations.PaymentController.Get(System.Int32)">
            <summary>
            Gets user based on specified id
            </summary>
            <param name="id">id of payment to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Registrations.PaymentController.AddPayment(PCO_BackEnd_WebAPI.DTOs.Registrations.AddPaymentDTO)">
            <summary>
            Add a payment for registration
            </summary>
            <param name="paymentDTO">Details about the payment to be added</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Registrations.PaymentController.UpdatePayment(System.Int32,PCO_BackEnd_WebAPI.DTOs.Registrations.UpdatePaymentDTO)">
            <summary>
            Updates payment details
            </summary>
            <param name="id">id of payment to be updated</param>
            <param name="paymentDTO">New information of payment to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Registrations.PaymentController.DeletePayment(System.Int32)">
            <summary>
            Deletes a payment
            </summary>
            <param name="id">id of payment to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Registrations.PaymentController.ConfirmPaymentDate(System.Int32)">
            <summary>
            Set the date when the payment is confirmed
            </summary>
            <param name="id">id of payment to be confirmed</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.RegistrationController.GetAll(System.Int32,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get list of registration
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <param name="conferenceId">filter results by conference id</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.RegistrationController.Get(System.Int32)">
            <summary>
            Gets registration based on specified id
            </summary>
            <param name="id">id of the registration to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.RegistrationController.Add(PCO_BackEnd_WebAPI.DTOs.Registrations.RequestRegistrationDTO)">
            <summary>
            Add a registration
            </summary>
            <param name="registrationDTO">Details about the registration to be added</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.RegistrationController.Update(System.Int32,PCO_BackEnd_WebAPI.DTOs.Registrations.RequestRegistrationDTO)">
            <summary>
            Updates registration information
            </summary>
            <param name="id"></param>
            <param name="registrationDTO"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.RegistrationController.Delete(System.Int32)">
            <summary>
            Deletes a registration
            </summary>
            <param name="id">id of registration to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.RegistrationController.SetRegistrationStatus(PCO_BackEnd_WebAPI.Models.ViewModels.SetRegistrationViewModel)">
            <summary>
            Change registration status
            </summary>
            <param name="model">registration id and new registration status</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.MembershipTypeController.GetAll(System.Int32,System.Int32,System.String)">
            <summary>
            Get list of membershiptypes
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <param name="membershipType">keyword for searching</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.MembershipTypeController.Get(System.Int32)">
            <summary>
            Gets the membership type based on specified id
            </summary>
            <param name="id">id of the membershipType to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.MembershipTypeController.AddMembershipType(PCO_BackEnd_WebAPI.DTOs.Accounts.RequestMembershipTypeDTO)">
            <summary>
            Adds a membershipType
            </summary>
            <param name="membershipTypeDTO">Details about the type of membershipType to be added</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.MembershipTypeController.UpdateMembershipType(System.Int32,PCO_BackEnd_WebAPI.DTOs.Accounts.RequestMembershipTypeDTO)">
            <summary>
            Updates the specified membershipType
            </summary>
            <param name="id">id of membershipType</param>
            <param name="membershipTypeDTO">New information about membershipType to update</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.MembershipTypeController.DeleteMembershipType(System.Int32)">
            <summary>
            Deletes the specified membership type
            </summary>
            <param name="id">user id of membershipType to delete</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.PRCDetailController.GetAll(System.Int32,System.Int32,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Gets list of prc details
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <param name="prcId">search PRC Details with the input prcId</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.PRCDetailController.Get(System.Int32)">
            <summary>
            Gets the PRC details based on specified id
            </summary>
            <param name="id">id of the prc detail to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.PRCDetailController.AddPRCDetail(PCO_BackEnd_WebAPI.DTOs.Accounts.RequestPRCDetailDTO)">
            <summary>
            Adds PRC details
            </summary>
            <param name="PRCDetailDTO">Details about PRC Details to be added</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.PRCDetailController.UpdatePRCDetail(System.Int32,PCO_BackEnd_WebAPI.DTOs.Accounts.RequestPRCDetailDTO)">
            <summary>
            Updates PRC detail based on specified id
            </summary>
            <param name="id">user Id</param>
            <param name="prcDetailDTO">New information about the PRCDetails to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.PRCDetailController.DeletePRCDetail(System.Int32)">
            <summary>
            Deletes PRC detail based on specified id
            </summary>
            <param name="id">user id to delete</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.UserInfoController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets list of user information
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.UserInfoController.Get(System.Int32)">
            <summary>
            Gets the user information based on specified id
            </summary>
            <param name="id">id of the user information to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.UserInfoController.UpdateUserInfo(System.Int32,PCO_BackEnd_WebAPI.DTOs.Accounts.RequestUserInfoDTO)">
            <summary>
            Updates user info based on specified id
            </summary>
            <param name="id">user id</param>
            <param name="userInfoDTO">New information about the user to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.ConferenceController.GetAll(PCO_BackEnd_WebAPI.Models.ParameterBindingModels.ConferenceParameterBindingModel)">
            <summary>
            Gets all list of Reference
            </summary>
            <param name="title">filter return by conference title</param>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.ConferenceController.Get(System.Int32)">
            <summary>
            Gets conference based on specified id
            </summary>
            <param name="id">id of the conference to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.ConferenceController.AddConference(PCO_BackEnd_WebAPI.DTOs.Conferences.AddConferenceDTO)">
            <summary>
            Adds a conference
            </summary>
            <param name="conferenceDTO">Details about the conference to be added.</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.ConferenceController.UpdateConference(System.Int32,PCO_BackEnd_WebAPI.DTOs.Conferences.UpdateConferenceDTO)">
            <summary>
            Updates details of conference
            </summary>
            <param name="id">id of the conference to be updated</param>
            <param name="conferenceDTO">New information about the conference to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.ConferenceController.DeleteConference(System.Int32)">
            <summary>
            Deletes a conference based on specified id
            </summary>
            <param name="id">id of the conference to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoController.GetAll(System.Int32,System.Int32,System.String)">
            <summary>
            Get list of promos
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoController.Get(System.Int32)">
            <summary>
            Gets the promo based on specified id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoController.AddPromo(PCO_BackEnd_WebAPI.DTOs.Conferences.Promos.RequestPromoDTO)">
            <summary>
            Adds a promo for conference
            </summary>
            <param name="promoDTO">Details about the Promo to be added</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoController.UpdatePromo(System.Int32,PCO_BackEnd_WebAPI.DTOs.Conferences.Promos.RequestPromoDTO)">
            <summary>
            Updates the promo details 
            </summary>
            <param name="id">id of the promo to be updated</param>
            <param name="promoDTO">New information about the promo to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoController.DeletePromo(System.Int32)">
            <summary>
            Deletes a promo based on specified id
            </summary>
            <param name="id">id of the promo to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoMemberController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets list of promo members
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoMemberController.Get(System.Int32)">
            <summary>
            Gets the promo member information based on id
            </summary>
            <param name="id">id of the promo member to be get</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoMemberController.AddPromoMember(System.Collections.Generic.List{PCO_BackEnd_WebAPI.DTOs.Conferences.Promos.ResponsePromoMemberDTO})">
            <summary>
            Adds a promo member
            </summary>
            <param name="promoMembersDTO">Details about the promo member to be added</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoMemberController.UpdatePromoMembers(System.Int32,PCO_BackEnd_WebAPI.DTOs.Conferences.Promos.ResponsePromoMemberDTO)">
            <summary>
            Updates a promo member
            </summary>
            <param name="id">id of the promo member to be updated</param>
            <param name="promoMemberDTO">New information about the promo member to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.Promos.PromoMemberController.DeletePromoMember(System.Int32)">
            <summary>
            Deletes a promo member
            </summary>
            <param name="id">id of promo member to be deleted</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.RateController.GetAll(System.Int32,System.Int32)">
            <summary>
            Gets list of rates
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.RateController.Get(System.Int32)">
            <summary>
            Gets the rate information based on specified id
            </summary>
            <param name="id">id of rate to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.RateController.AddRates(System.Collections.Generic.List{PCO_BackEnd_WebAPI.DTOs.Conferences.RequestRateDTO})">
            <summary>
            Add list of Rates 
            </summary>
            <param name="rateDTO">>Details about the rate to be added.</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.RateController.UpdateRate(System.Int32,PCO_BackEnd_WebAPI.DTOs.Conferences.RequestRateDTO)">
            <summary>
            Updates a rate
            </summary>
            <param name="id">user id</param>
            <param name="rateDTO">New information about the rate to be updated</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Conferences.RateController.DeleteRates(System.Int32)">
            <summary>
            Deletes a rate
            </summary>
            <param name="id">id of the rate to be deleted.</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.ErrorManager.GetAllExceptionMessages(System.Exception)">
            <summary>
            Method that returns all exceptions and inner exceptions
            </summary>
            <param name="aException"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.ErrorManager.GetInnerExceptionMessage(System.Exception)">
            <summary>
            Method that returns innest exception message 
            </summary>
            <param name="aException"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Images.ImageManager.GetAdjustedSizeInBytes">
            <summary>
            Resizes image if size is greater than 100kb
            </summary>
            <returns></returns>
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Models.Pagination.PageResult`1.PageCount">
            <summary> 
            The total number of pages available. 
            </summary> 
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Models.Pagination.PageResult`1.RecordCount">
            <summary> 
            The total number of records available. 
            </summary> 
        </member>
        <member name="P:PCO_BackEnd_WebAPI.Models.Pagination.PageResult`1.Results">
            <summary> 
            The records this page represents. 
            </summary> 
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.Repository`1.Get(System.Int32)">
            <summary>
            Get object based on provided Id
            </summary>
            <param name="id">Primary Key</param>
            <returns> Singl object</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.Repository`1.GetAll">
            <summary>
            Get entity data.
            </summary>
            <returns>All data of table</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.Repository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Queries list of object based on given lambda expression.
            </summary>
            <param name="predicate">Lambda expression</param>
            <returns>Returns list of queried objects</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.Repository`1.Add(`0)">
            <summary>
            
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.Repository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add list of data in database.
            </summary>
            <param name="entities">Objects to be added in database</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.Repository`1.Remove(`0)">
            <summary>
            Remove the object in database
            </summary>
            <param name="entity">Object to be removed</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.SendEmailConfirmation(System.Int32)">
            <summary>
            Sends email to user to confirm registered email address.
            </summary>
            <param name="id">User Id</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.SendEmail(System.String,System.Int32)">
            <summary>
            Send Email to use using SMTP
            </summary>
            <param name="aEmail">email address</param>
            <param name="emailClassification">Checker if email template for reset password or confirm email will be passed.</param>
            <returns>Void</returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.SendResetPasswordEmail(System.String)">
            <summary>
            Sends link to the specified email on how to reset password.
            </summary>
            <param name="email">Email of user to reset</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.ResetPassword(PCO_BackEnd_WebAPI.Models.AccountViewModels.ResetPasswordViewModel)">
            <summary>
            Reset users password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.ConfirmEmail(PCO_BackEnd_WebAPI.Models.AccountViewModels.ConfirmEmailViewModel)">
            <summary>
            Sets the user account as confirmed.
            </summary>
            <param name="model">userId: id of user<br/>token: Generate token to confirm email</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.Register(PCO_BackEnd_WebAPI.Models.AccountBindingModels.UserAccountBindingModel)">
            <summary>
            Creates a user account
            </summary>
            <param name="model">If no PRC Details to be specified, set values to empty string(""). otherwise, set its value</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.ChangePassword(PCO_BackEnd_WebAPI.Models.AccountBindingModels.ChangePasswordBindingModel)">
            <summary>
            Change user password
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.GetUsers(System.String,System.Int32,System.Int32)">
            <summary>
            Returns list of accounts
            </summary>
            <param name="page">nth page of list. Default value: 1</param>
            <param name="size">count of item to return in a page. Returns all record if not specified</param>
            <param name="keywordFilter">filter of returned items</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.GetUserByEmail(System.String)">
            <summary>
            Get user details by email
            </summary>
            <param name="email">Registered email of user</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.GetUser(System.Int32)">
            <summary>
            Gets user based on specified id
            </summary>
            <param name="id">id of account to be fetched</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.UpdateUser(System.Int32,PCO_BackEnd_WebAPI.DTOs.Accounts.RequestAccountDTO)">
            <summary>
            Updates user Account
            </summary>
            <param name="id">user Id</param>
            <param name="accountDTO">Request body of user</param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Controllers.Accounts.AccountController.DeleteUser(System.Int32)">
            <summary>
            Deletes a user
            </summary>
            <param name="id">user of id to be deleted</param>
            <returns></returns>
        </member>
        <member name="F:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.ADDEND">
            <summary>
            Use in encryption formula. To be added in UserID
            </summary>
        </member>
        <member name="F:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.CUSTOM_ALPHABET">
            <summary>
            Cipher - Dicipher string (RN - Renz MZ - Migz GY - Gendy MC - Michelle JS- Jonas)
            </summary>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.Cipher(System.Int32)">
            <summary>
            Convert UserId to ciphered string.
            </summary>
            <param name="aID"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.DeCipher(System.String)">
            <summary>
            Convert string to original userID
            </summary>
            <param name="aText"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.StringReverse(System.String)">
            <summary>
            Reverse string
            </summary>
            <param name="aText"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.GetString(System.Int32)">
            <summary>
            Convert number to string
            </summary>
            <param name="aIndex"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Helpers.StringManipulationHelper.GetNumber(System.String)">
            <summary>
            Convert string to number
            </summary>
            <param name="aText"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Images.ReferenceImage.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="base64String">base64string format of image</param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.AccountRepository.UpdateUserInfo(PCO_BackEnd_WebAPI.Models.Accounts.UserInfo,PCO_BackEnd_WebAPI.Models.Accounts.UserInfo)">
            <summary>
            Updates UserInfo
            </summary>
            <param name="oldInfo"></param>
            <param name="newInfo"></param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.AccountRepository.UpdatePRCDetail(PCO_BackEnd_WebAPI.Models.Accounts.PRCDetail,PCO_BackEnd_WebAPI.Models.Accounts.PRCDetail,System.Int32)">
            <summary>
            Updates PRC Details
            </summary>
            <param name="oldPRC"></param>
            <param name="newPRC"></param>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.Repositories.RepositoryHelper`1.GetPrimaryKey(System.Data.Entity.DbContext,`0)">
            <summary>
            Gets the primary Key of specified entity
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:PCO_BackEnd_WebAPI.Models.Persistence.UnitOfWork.UnitOfWork.Complete">
            <summary>
            Reflect changes to database
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
